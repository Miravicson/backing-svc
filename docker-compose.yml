version: "3.8"

services:
  mongodb:
    container_name: mongodb
    image: mongo
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./mongodb/data/db:/data/db
    ports:
      - 27017:27017

  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: always
    volumes:
      - 'redis_vol:/data'
    ports:
      - '6379:6379'
    environment:
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    command: redis-server --save 20 1 --loglevel warning


  postgres:
    container_name: postgres-db
    image: postgres:12-alpine
    restart: always
    environment:
      - POSTGRES_USER={POSTGRES_USER}
      - POSTGRES_PASSWORD={POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./create-db.sql:/docker-entrypoint-initdb.d/create-db.sql
      - ./postgresql/data:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER={RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS={RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"





volumes:
  redis_vol:
    driver: local

networks:
  default:
    driver: bridge